// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Test Form Form should render 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <FormComponent
    model={
      Model {
        "context": Object {},
        "initialValue": Object {},
        "observable": Subject {
          "_isScalar": false,
          "closed": false,
          "hasError": false,
          "isStopped": false,
          "observers": Array [],
          "thrownError": null,
        },
        "scenarios": Array [
          "default",
        ],
        "states": Object {},
        "type": ObjectType {
          "filter": undefined,
          "normalizeType": [Function],
          "permission": undefined,
          "properties": Object {},
          "validator": undefined,
          "validatorConfig": Object {},
        },
        "value": Object {},
      }
    }
    render={[Function]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": null,
    "nodeType": "host",
    "props": Object {
      "children": "{\\"model\\":{\\"initialValue\\":{},\\"value\\":{},\\"type\\":{\\"properties\\":{},\\"validatorConfig\\":{}},\\"states\\":{},\\"observable\\":{\\"_isScalar\\":false,\\"observers\\":[],\\"closed\\":false,\\"isStopped\\":false,\\"hasError\\":false,\\"thrownError\\":null},\\"scenarios\\":[\\"default\\"],\\"context\\":{}},\\"scope\\":[]}",
    },
    "ref": null,
    "rendered": "{\\"model\\":{\\"initialValue\\":{},\\"value\\":{},\\"type\\":{\\"properties\\":{},\\"validatorConfig\\":{}},\\"states\\":{},\\"observable\\":{\\"_isScalar\\":false,\\"observers\\":[],\\"closed\\":false,\\"isStopped\\":false,\\"hasError\\":false,\\"thrownError\\":null},\\"scenarios\\":[\\"default\\"],\\"context\\":{}},\\"scope\\":[]}",
    "type": "span",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": null,
      "nodeType": "host",
      "props": Object {
        "children": "{\\"model\\":{\\"initialValue\\":{},\\"value\\":{},\\"type\\":{\\"properties\\":{},\\"validatorConfig\\":{}},\\"states\\":{},\\"observable\\":{\\"_isScalar\\":false,\\"observers\\":[],\\"closed\\":false,\\"isStopped\\":false,\\"hasError\\":false,\\"thrownError\\":null},\\"scenarios\\":[\\"default\\"],\\"context\\":{}},\\"scope\\":[]}",
      },
      "ref": null,
      "rendered": "{\\"model\\":{\\"initialValue\\":{},\\"value\\":{},\\"type\\":{\\"properties\\":{},\\"validatorConfig\\":{}},\\"states\\":{},\\"observable\\":{\\"_isScalar\\":false,\\"observers\\":[],\\"closed\\":false,\\"isStopped\\":false,\\"hasError\\":false,\\"thrownError\\":null},\\"scenarios\\":[\\"default\\"],\\"context\\":{}},\\"scope\\":[]}",
      "type": "span",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactFifteenAdapter {
      "options": Object {
        "supportPrevContextArgumentOfComponentDidUpdate": true,
      },
    },
  },
}
`;
